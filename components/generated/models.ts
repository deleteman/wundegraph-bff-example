// Code generated by wunderctl. DO NOT EDIT.

import type function_IncrementalData from "../../.wundergraph/operations/incremental/data";
import type function_IncrementalDelay from "../../.wundergraph/operations/incremental/delay";
import type function_UsersGet from "../../.wundergraph/operations/users/get";
import type function_UsersSubscribe from "../../.wundergraph/operations/users/subscribe";
import type function_UsersUpdate from "../../.wundergraph/operations/users/update";
import type { ExtractInput, ExtractResponse } from "@wundergraph/sdk/operations";
import type { OperationErrors } from "./ts-operation-errors";
import type { GraphQLError } from "@wundergraph/sdk/client";

export type JSONValue = string | number | boolean | JSONObject | Array<JSONValue>;

export type JSONObject = { [key: string]: JSONValue };

export interface CountryWeatherInput {
	countryCode: string;
}

export interface DragonsInput {
	limit: number;
}

export type IncrementalDelayInput = ExtractInput<typeof function_IncrementalDelay>;

export type UsersGetInput = ExtractInput<typeof function_UsersGet>;

export type UsersSubscribeInput = ExtractInput<typeof function_UsersSubscribe>;

export type UsersUpdateInput = ExtractInput<typeof function_UsersUpdate>;

export interface CountryWeatherInputInternal {
	countryCode: string;
	capital: string;
}

export interface DragonsInputInternal {
	limit: number;
}

export interface IncrementalDelayInputInternal {
	seconds: number;
}

export interface UsersGetInputInternal {
	id: string;
}

export interface UsersSubscribeInputInternal {
	id: string;
}

export interface UsersUpdateInputInternal {
	id: string;
	name: string;
	bio: string;
}

export interface CountryWeatherInputInjected {
	countryCode: string;
	capital: string;
}

export interface DragonsInputInjected {
	limit: number;
}

export interface CountryWeatherResponse {
	data?: CountryWeatherResponseData;
	errors?: GraphQLError[];
}

export interface DragonsResponse {
	data?: DragonsResponseData;
	errors?: GraphQLError[];
}

export interface IncrementalDataResponse {
	data?: IncrementalDataResponseData;
	errors?: GraphQLError[];
}

export interface IncrementalDelayResponse {
	data?: IncrementalDelayResponseData;
	errors?: GraphQLError[];
}

export interface UsersGetResponse {
	data?: UsersGetResponseData;
	errors?: GraphQLError[];
}

export interface UsersSubscribeResponse {
	data?: UsersSubscribeResponseData;
	errors?: GraphQLError[];
}

export interface UsersUpdateResponse {
	data?: UsersUpdateResponseData;
	errors?: GraphQLError[];
}

export interface CountryWeatherResponseData {
	country: {
		code: string;
		name: string;
		capital?: string;
		weather: {
			temperature?: {
				max?: number;
			};
			summary?: {
				title?: string;
				description?: string;
			};
		};
	}[];
}

export interface DragonsResponseData {
	spacex_dragons?: {
		id?: string;
		name?: string;
		active?: boolean;
	}[];
}

export type IncrementalDataResponseData = ExtractResponse<typeof function_IncrementalData>;

export type IncrementalDelayResponseData = ExtractResponse<typeof function_IncrementalDelay>;

export type UsersGetResponseData = ExtractResponse<typeof function_UsersGet>;

export type UsersSubscribeResponseData = ExtractResponse<typeof function_UsersSubscribe>;

export type UsersUpdateResponseData = ExtractResponse<typeof function_UsersUpdate>;
